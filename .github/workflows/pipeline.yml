name: CI/CD for Nexus API

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    name: Build Docker Image and Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nexus-api:latest

  run-tests:
    name: Run Tests on Nexus API
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install Dependencies
        run: npm install

      - name: Run Tests with Jest
        run: |
          npx jest --ci --config=jest.config.ts --reporters=default --reporters=jest-stare

  deploy:
    name: Deploy Docker Container to Server
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << EOF
            echo "Pulling latest Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/nexus-api:latest
            echo "Stopping existing container if running..."
            docker stop nexus-api || true
            echo "Removing old container if exists..."
            docker rm nexus-api || true
            echo "Running new container..."
            docker run -d --name nexus-api -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/nexus-api:latest
            echo "Deployment successful!"
          EOF