name: CI/CD for Nexus API

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  # Step 1: Build Docker image and push to Docker Hub
  build-and-push:
    name: Build Docker Image and Push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nexus-api:latest

  # Step 2: Run Tests
  run-tests:
    name: Run Tests on Nexus API
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install Dependencies
        run: npm install

      - name: List all npm scripts
        run: npm run

      - name: Run Tests
        run: npm run test:ci

  # Step 3: Deploy Docker container to server
  deploy:
    name: Deploy Docker Container to Server
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: SSH to Server and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/nexus-api:latest
          docker stop nexus-api || true
          docker rm nexus-api || true
          docker run -d --name nexus-api -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/nexus-api:latest
          EOF
